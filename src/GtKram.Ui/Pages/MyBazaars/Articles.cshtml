@page "/MyBazaars/{sellerId:guid}/Articles"
@model GtKram.Ui.Pages.MyBazaars.ArticlesModel
@{
    ViewData["Title"] = Model.GetNode().Title;
    ViewData["HasFooter"] = true;

    Guid.TryParse(Request.RouteValues["sellerId"] as string, out var sellerId);

    Model.BuildHeaderMenu(new { sellerId }); 
    var addUrl = Url.PageLink("AddArticle", null, new { sellerId });
}

@await Html.PartialAsync("_Header")

<section class="section">
    <div class="container">

        <div class="columns is-gapless is-mobile">
            <div class="column is-flex is-align-items-center">@Html.CreateBreadcrumb(new { sellerId })</div>
            <div class="column is-narrow">
                <div class="dropdown is-hoverable is-right">
                    <div class="dropdown-trigger">
                        <button class="button" aria-haspopup="true" aria-controls="user-action">
                            <span class="icon is-small">
                                <i class="fas fa-ellipsis-vertical"></i>
                            </span>
                        </button>
                    </div>
                    <div class="dropdown-menu" id="user-action" role="menu">
                        <div class="dropdown-content">
                            <div class="dropdown-item">
                                <div>Gesamt: @Model.AvailableCount / @Model.MaxArticleCount</div>
                                <div>Gesamtwert: @Model.AvailableTotalValue.ToString("0.00") €</div>
                                <div>Verkauft: @Model.SoldCount</div>
                                <div>Verkaufswert: @Model.SoldTotalValue.ToString("0.00") €</div>
                                <div>Auszahlung: @Model.PayoutTotalValue.ToString("0.00") €</div>
                            </div>
                            @if (Model.Event != null && Model.CanAdd)
                            {
                                <hr class="dropdown-divider" />
                                <a href="@addUrl" class="dropdown-item">
                                    Artikel anlegen
                                </a>
                                <a href="#" data-target="#takeOverModal" data-url="@Url.PageLink(string.Empty, "takeoverarticles", new { sellerId })" class="dropdown-item open-modal">
                                    Artikel übernehmen
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <h1 class="title is-4">@Model.Event</h1>
        <h2 class="subtitle">Bearbeitung endet am: @Model.EditArticleEndDate</h2>

        @if (Model.CanAdd)
        {
            <div>
                <a href="@addUrl" class="button is-floating is-link">
                    <i class="fas fa-plus-circle"></i>
                </a>
            </div>
        }

        @if (!ModelState.IsValid)
        {
            <div class="notification is-danger">
                <button class="delete"></button>
                <div asp-validation-summary="All"></div>
            </div>
        }

        <div class="table-container mt-4">
            <table class="table is-striped is-hoverable is-fullwidth">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Größe</th>
                        <th>Preis</th>
                        <th>Verkauft</th>
                        <th>Aktion</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Items.Length < 1)
                    {
                        <tr>
                            <td colspan="5"><div class="has-text-centered">Keine Artikel gefunden.</div></td>
                        </tr>
                    }
                    @foreach (var a in Model.Items)
                    {
                        <tr class="clickable-row" data-url="@(Url.PageLink("EditArticle", null, new { id = a.Id }))">
                            <td>@a.Name (#@a.LabelNumber)</td>
                            <td>@a.Size</td>
                            <td>@a.Price.ToString("0.00") €</td>
                            <td>
                                <i class="@(a.IsSold ? "fas fa-check-circle has-text-success" : "")"></i>
                            </td>
                            <td>
                                <a href="@(Url.PageLink("EditArticle", null, new { id = a.Id }))">Bearbeiten</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>
</section>

@await Html.PartialAsync("_Footer")

@Html.CreateModalTemplateWithOkCancel(
    "takeOverModal",
    "Artikel übernehmen",
    "Möchtest du wirklich die offenen Artikel des letzten Kinderbasars übernehmen?")

@section Scripts 
{
    <script type="text/javascript">
        $(function () {

            $(".clickable-row").click(function (e) {
                e.stopPropagation();
                window.location = $(this).data("url");
            });

            handleModal({
                id: '#takeOverModal',
                token: {@Html.AjaxCsrfToken()},
                confirm: {
                    dataurl: 'url',
                    closeOnFailed: true,
                    action: function () {
                        window.location.reload();
                    },
                    toast: {
                        success: 'Artikel wurden angelegt.',
                        failed: 'Artikel konnten nicht angelegt werden.'
                    }
                }
            });
        });
    </script>
}

